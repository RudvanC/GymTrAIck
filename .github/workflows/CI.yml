name: CI

on:
  push:
    branches: [main, test-e2e, test-deploy]
  pull_request:
    branches: [main, test-e2e, test-deploy]
  workflow_dispatch:

jobs:
  # Cancel previous runs to avoid redundancy
  avoid_redundancy:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

  # Build job: compiles the app
  build:
    runs-on: ubuntu-latest
    needs: avoid_redundancy
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .next

  # Unit tests (Jest)
  unit:
    runs-on: ubuntu-latest
    needs: build
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .next
      - name: Run unit tests
        run: npm run test:unit

  # End-to-end tests (Playwright)
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - run: npm ci
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .next
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # Deploy only if tests pass
  deploy:
    needs: [unit, e2e]
    if: ${{ needs.e2e.result == 'success' && needs.unit.result == 'success' }}
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      SERVICE_ROLE_KEY: ${{ secrets.SERVICE_ROLE_KEY }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run build
      - run: npx vercel pull --yes --environment=production --token $VERCEL_TOKEN
      - run: npx vercel --prod --confirm --token $VERCEL_TOKEN
