# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main, test-e2e, test-deploy]
  pull_request:
    branches: [main, test-e2e, test-deploy]
  workflow_dispatch: # ejecución manual opcional

# ────────────────────────────
# 1) Tests unitarios (Jest)
# ────────────────────────────
jobs:
  avoid_redundancy:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  unit:
    runs-on: ubuntu-latest
    needs: avoid_redundancy

    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # cache de ~/.npm entre ejecuciones

      - run: npm ci

      - name: Run unit tests
        run: npm run test:unit # ← script que dispara Jest

  # ────────────────────────────
  # 2) Tests E2E (Playwright)
  # ────────────────────────────
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: avoid_redundancy

    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Build Next.js App
        run: npm run build
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    needs: [e2e, unit]
    if: ${{ needs.e2e.result == 'success' && needs.unit.result == 'success' }}
    runs-on: ubuntu-latest

    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} # ← NUEVO
      SERVICE_ROLE_KEY: ${{ secrets.SERVICE_ROLE_KEY }} # ← si tu helper la usa
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - run: npm run build # ahora sí encuentra las vars
      - run: npx vercel pull --yes --environment=production --token $VERCEL_TOKEN
      - run: npx vercel --prod --confirm --token $VERCEL_TOKEN
