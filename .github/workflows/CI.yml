name: CI

on:
  push:
    branches: [main] # cámbialo si tu rama principal se llama distinto
  pull_request:
    branches: [main]
  workflow_dispatch: # permite lanzarlo manualmente desde la UI

########################
# 1) BUILD
########################
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # cachea ~/.npm entre ejecuciones

      - run: npm ci
      - run: npm run build # genera la carpeta .next

      # opcional: muestra que .next existe
      # - run: ls -R | head

      - name: Upload .next artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build # ← nombre EXACTO que usará el job e2e
          path: .next
          retention-days: 1 # sólo lo necesitamos para este workflow

  ########################
  # 2) UNIT TESTS (Jest)
  ########################
  unit:
    needs: build # sólo corre si el build fue OK
    runs-on: ubuntu-latest

    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - name: Run unit tests
        run: npm run test:unit # script que dispara Jest

  ########################
  # 3) E2E TESTS (Playwright)
  ########################
  e2e:
    needs: [build] # requiere que build y unit = success
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci

      # ↓ Recupera la build compilada
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: next-build # ← mismo nombre que en upload
          path: .next # la coloca donde Next.js la espera

      # Instala navegadores + dependencias
      - run: npx playwright install --with-deps

      # Ejecuta los tests E2E
      - name: Run Playwright tests
        run: npm run test:e2e # script que dispara Playwright

      # Guarda el reporte HTML
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
